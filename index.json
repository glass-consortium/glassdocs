[
{
	"uri": "/",
	"title": "HOME",
	"tags": [],
	"description": "GLASS Workflows",
	"content": " Glioma Longitudinal AnalySiS Consortium   Issues loading website contents?   If website is not loading all of its contents or have formatting issues, you may visit mirror website at http://guide.glass-consortium.org   [Preprint \n](https://www.biorxiv.org/content/early/2017/10/02/196139)\nPhase 1 data release Following GLASS Face2Face meetup at [SNO 2018 meeting](https://academic.oup.com/neuro-oncology/article-abstract/20/suppl_6/vi76/5153719?redirectedFrom=fulltext), we have now migrated to an updated and stable version of analysis workflows. To access updated workflows and the first release of mutation and clinical annotation dataset, you will need a prior approval to access https://synapse.org/glass data portal. Please contact Prof. [Roel Verhaak](https://www.jax.org/research-and-faculty/faculty/roel-verhaak) for additional details.  This website now hosts a legacy version of workflows which were containerized in docker/singularity. Until we containerize updated snakemake based workflows, documentation on this website should be considered outdated.  GLASS logo is from a royalty-free icon made by Darius Dan of flaticon.com is licensed by CC 3.0 BY\n"
},
{
	"uri": "/deprecated/setup/",
	"title": " Set Up",
	"tags": [],
	"description": "",
	"content": " Setup Docker Image  Download and setup docker image: glasstools/keystone\n Setup Singularity Image  Download and setup Singularity image: glass-consortium/glasstools:beta\n Setup Disk Mounts  Prepare disk mounts on the host system for use with docker containers\n "
},
{
	"uri": "/deprecated/setup/docker/",
	"title": "Setup Docker Image",
	"tags": [],
	"description": "",
	"content": "Download and setup docker image: glasstools/keystone\n  Looking for Singularity image?   Visit [Singularity](/setup/singularity/) page for installation and configuring Singularity based workflows.   Installing Docker Your system administrator can install Docker version 17.09.0-ce, build afdb6d4 or higher. For more, visit https://docs.docker.com/engine/installation/\nDocker image docker pull glasstools/keystone # OR docker pull glasstools/keystone:1.2.2  \nhttps://hub.docker.com/r/glasstools/keystone\nTest run With data mounts and host user:group mapping export GLASSMOUNTS=\u0026quot;/fastscratch/foo/dockvol/glass_tools/glass_mounts\u0026quot; docker run -e HOSTUSER=$USER -e HOSTGROUP=verhaak-lab -e HOSTUSERID=$UID -e HOSTGROUPID=56565 -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata glasstools/keystone   This will source commands or workflow from disk1/glasscore/Workflows/startup script Visit Disk Mounts section for more on how to mount host disk volumes and start workflows.  Run specific tools  To run specific command (user id mapped to host user), use \u0026quot;-c bash command\u0026quot; format immediately after docker run ... glasstools/keystone.\n export GLASSMOUNTS=\u0026quot;/fastscratch/foo/dockvol/glass_tools/glass_mounts\u0026quot; docker run -e HOSTUSER=$USER -e HOSTGROUP=verhaak-lab -e HOSTUSERID=$UID -e HOSTGROUPID=56565 -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata glasstools/keystone \u0026quot;-c samtools\u0026quot; ## view data mounts docker run -e HOSTUSER=$USER -e HOSTGROUP=verhaak-lab -e HOSTUSERID=$UID -e HOSTGROUPID=56565 -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata glasstools/keystone \u0026quot;-c ls -alh /mnt/\u0026quot;  Without data mounts docker run glasstools/keystone   keystone image is configured to be run with structured data mounts as shown under glass_mounts directory. Barebone docker run glasstools/keystone will quit immediately with partial message like following:\nUser and Group ID mapping: ENABLE Running userid_mapping.sh script\n disable usermapping  PS: Without host user:group mapping, docker container will run under default glassuser which has limited read:write permissions to host file system.\nSupply -e USERMAPPING=DISABLE while starting docker container to disable user mapping to host system.\nUnlike user mapped, data mounts above, note change in command format when you disable user mapping, i.e., supply bash command in quoutes without prefix -c\n docker run -e USERMAPPING=DISABLE -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata glasstools/keystone \u0026quot;id -a \u0026amp;\u0026amp; ls -alh /mnt/\u0026quot;   Note that docker container running as a glassuser has not valid permission to access mounted host volumes.\nUser and Group ID mapping: DISABLE ## INFO ## Running as a non-root glassuser with limited read-write privileges to host file system Visit http://docker.glass-consortium.org for more on how to use this docker image uid=2119518(glassuser) gid=712119(glass) groups=712119(glass),50(staff) total 8.0K drwxr-xr-x 5 root root 4.0K Oct 2 09:52 . drwxr-xr-x 21 root root 4.0K Oct 7 06:15 .. drwxr-x--- 4 12345 56565 4.0K Oct 2 10:41 glasscore drwxr-x--- 4 12345 56565 4.0K Oct 2 10:41 glassdata drwxr-x--- 4 12345 56565 4.0K Oct 2 10:41 scratch  "
},
{
	"uri": "/deprecated/setup/singularity/",
	"title": "Setup Singularity Image",
	"tags": [],
	"description": "",
	"content": "Download and setup Singularity image: glass-consortium/glasstools:beta\n  Looking for Docker image?   Visit [Docker](/setup/docker/) page for installation and configuring Docker based workflows.   How to install Singularity  One time installation, requires admin privileges   Please ask your system administrator to install Singularity with following version. While installation should be done by IT administrator, running GLASS workflows does not require sudo privilege. Also, unlike potential root escalation while running docker container, Singularity based workflows are more isolated from host environment and less vulnerable to root escalation. Visit http://singularity.lbl.gov/user-guide#security-and-privilege-escalation for more on security.\n  GLASS workflows are using Singularity v2.4\n   Full version at the time of install: v2.4-install_718360bb.g718360bb\nCommit: https://github.com/singularityware/singularity/commit/718360bb20b66cbafb85dd9d0a73bd6bb60c7a1f\n  For better compatibility with pre-built GLASS image, please install Singularity from forked reposioty as follows:\numask 0022 git clone https://github.com/glass-consortium/singularity.git cd singularity ## confirm last commit ID to be 718360bb20b66cbafb85dd9d0a73bd6bb60c7a1f for HEAD -\u0026gt; master branch git log --name-status HEAD^..HEAD ## fork master branch to a new branch, named install_718360bb git checkout -b install_718360bb git status    This will show\u0026hellip;\nOn branch install_718360bb\nnothing to commit, working tree clean\n ./autogen.sh \u0026amp;\u0026amp; ./configure --prefix=/usr/local \u0026amp;\u0026amp; make # return exit code for compilation status echo $? ## only one time, we need root privileges sudo make install ## return to non-root user environment sudo -k cd ${HOME} # non-root user singularity --version  This will show 2.4-install_718360bb.g718360bb. If so, installation is identical to an environment used to build GLASS Singularity image.\nManual build We recommend pulling pre-built Singularity image from Singularity registry at https://www.singularity-hub.org/collections/262\nManual build is for improvement and debugging of current beta image, especially with reducing image size and adding shortcodes to additional GLASS workflows. Visit https://github.com/glass-consortium/glasstools for Singularity file and automated build details.\ngit clone https://github.com/glass-consortium/glasstools.git cd build singularity build glasstools_keystone_beta.simg Singularity.beta singularity inspect glasstools_keystone_beta.simg  Singularity image for GLASS workflows  18-Nov-2017\nv1.1.2s2\n Build details for glass-consortium/glasstools images.\nPS: Documentation to run workflows is not yet ready. Visit https://docker.glass-consortium.org for updates.\nDownload current Build singularity pull shub://glass-consortium/glasstools:beta   If you get an error like following:\n mktemp: failed to create file via template ‘/scratch/.singularity-layerfile.XXXXXX’: No such file or directory ERROR: Failed to create temporary directory ABORT: Aborting with RETVAL=255   Rewrite and export following environment variables, and rerun singularity pull command.\n echo \u0026quot;${TMPDIR}\u0026quot; echo \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot; ## both of these variables should be non-empty and point to user-writable paths TMPDIR=\u0026quot;/mnt/disk1/singularity/GLASS/tmp\u0026quot; SINGULARITY_CACHEDIR=\u0026quot;/mnt/disk1/singularity/GLASS/cache\u0026quot; export TMPDIR SINGULARITY_CACHEDIR mkdir -p \u0026quot;${TMPDIR}\u0026quot; mkdir -p \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot;  Automated build, when successfully built is available at Singularity Hub: https://www.singularity-hub.org/collections/262 with image tag: glass-consortium/glasstools:beta\n Download using Singularity, v2.4 or higher. Avoid running container as root. Singularity images does not require root privileges to run workflows. Default bind while running workflow is user ${HOME}. For better potability and disk mounts, ask your system admin to configure /etc/singularity/singularity.conf and set enable overlay = yes. Read http://singularity.lbl.gov/docs-mount for details.  Visit Disk Mounts section for more on how to mount host disk volumes and start workflows.\nInstallation on nodes without internet access  If HPC has limited or no internet access, you can install GLASS workflows by first downloading singularity image on a different, internet-enabled machine and then moving downloaded image to machines with no internet access.  On an internet-enabled machine, e.g., login node  Following command will download singularity image with current GLASS workflows to a default singularity cache directory1. Alternately, you can specify alternate location for cache directory by environment variable SINGULARITY_CACHEDIR, i.e., one with enough space to store cache instead of user home directory.\nSINGULARITY_CACHEDIR=/scratch/singularity/cache export SINGULARITY_CACHEDIR mkdir -p \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot; ## download singularity image with current GLASS workflows singularity pull shub://glass-consortium/glasstools:beta cd /scratch/singularity/cache md5sum glass-consortium-glasstools-master-beta.simg ## inspect image for version: v1.1.2s2 singularity inspect glass-consortium-glasstools-master-beta.simg  After a successful pull command, you should have a singularity image, glass-consortium-glasstools-master-beta.simg of approx. 1.3 GB size with md5sum of e3fcd575b10b6869cbf9faa5d98acdb4.\n If you are unable to download an image using singularity pull command, you can download an image using ftp command.\nwget -P \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot; ftp://ftp.jax.org/verhaak/image/singularity/glass-consortium-glasstools-master-beta.simg   On a non-internet machine, e.g., compute node  Please note that nodes with non-internet access must have singularity software installed using installation steps above. This is not required in most cases as login and compute nodes are on shared file system, and hence, singularity command and downloaded GLASS image on an login node can be accessed by all of compute nodes.\n Create a singularity cache directory to store downloaded GLASS workflows image\nSINGULARITY_CACHEDIR=/scratch/singularity/cache export SINGULARITY_CACHEDIR mkdir -p \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot;  Copy singularity image over local area network (LAN) connection from an internet-enabled machine (www-node) to non-internet node (lan-node)\nrsync -avhP www-node:/scratch/singularity/cache/ lan-node:/scratch/singularity/cache/ ## image can be renamed mv glass-consortium-glasstools-master-beta.simg glasstools_keystone_beta.simg ## inspect image cd \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot; singularity inspect glasstools_keystone_beta.simg  Inspect log for v1.1.2s2\n{ \u0026quot;WEBSITE\u0026quot;: \u0026quot;https://docker.glass-consortium.org\u0026quot;, \u0026quot;org.label-schema.usage.singularity.deffile.bootstrap\u0026quot;: \u0026quot;docker\u0026quot;, \u0026quot;MAINTAINER\u0026quot;: \u0026quot;Samir B. Amin, tweet: sbamin, web: https://sbamin.com\u0026quot;, \u0026quot;NAME\u0026quot;: \u0026quot;glasstools:beta\u0026quot;, \u0026quot;LICENSE\u0026quot;: \u0026quot;https://github.com/glass-consortium/glasstools/blob/master/LICENSE\u0026quot;, \u0026quot;org.label-schema.usage\u0026quot;: \u0026quot;/.singularity.d/runscript.help\u0026quot;, \u0026quot;org.label-schema.schema-version\u0026quot;: \u0026quot;1.0\u0026quot;, \u0026quot;org.label-schema.build-date\u0026quot;: \u0026quot;2017-11-18T13:35:49+00:00\u0026quot;, \u0026quot;org.label-schema.usage.singularity.deffile.includecmd\u0026quot;: \u0026quot;no\u0026quot;, \u0026quot;VERSION\u0026quot;: \u0026quot;v1.1.2s2\u0026quot;, \u0026quot;org.label-schema.usage.singularity.deffile.from\u0026quot;: \u0026quot;ubuntu:16.04\u0026quot;, \u0026quot;org.label-schema.usage.singularity.deffile\u0026quot;: \u0026quot;Singularity.beta\u0026quot;, \u0026quot;SOURCECODE\u0026quot;: \u0026quot;https://github.com/glass-consortium/glasstools\u0026quot;, \u0026quot;org.label-schema.usage.singularity.runscript.help\u0026quot;: \u0026quot;/.singularity.d/runscript.help\u0026quot;, \u0026quot;org.label-schema.usage.singularity.version\u0026quot;: \u0026quot;2.4-feature-squashbuild-secbuild.g818b648\u0026quot;, \u0026quot;CONTACT\u0026quot;: \u0026quot;Roel Verhaak, tweet: roelverhaak, web: https://www.jax.org/verhaak-lab\u0026quot;, \u0026quot;org.label-schema.build-size\u0026quot;: \u0026quot;3629MB\u0026quot;, \u0026quot;ISSUES\u0026quot;: \u0026quot;https://github.com/glass-consortium/glassdocs/issues\u0026quot;, \u0026quot;DESCRIPTION\u0026quot;: \u0026quot;Singularity image to run GLASS consortium workflows\u0026quot; }  "
},
{
	"uri": "/deprecated/setup/diskmounts/",
	"title": "Setup Disk Mounts",
	"tags": [],
	"description": "",
	"content": "Prepare disk mounts on the host system for use with docker containers\nWith data mounts and host user:group mapping Singularity based image does not require user:group mapping but do require binding of disk mounts in same order as with docker based workflows.  Tree view of GLASS mounts On host system, create a base directory named, glass_mounts with following subdirectories. GLASS workflows rely on strict hierarchy of directories within glass_mounts.\nglass_mounts # base directory on host system under all disk mounts are present ├── disk1 # disk for workflows scripts, custom startup for users and run logs │ ├── glasscore # space for workflows, user startup and apps configuration │ │ ├── configs │ │ │ ├── bin # put executables here to be sourced from container ENV │ │ │ ├── extapps # put jar files or compiled apps here │ │ │ │ └── Rpkgs # put additional compiled R packages (v3.4.2) here │ │ │ └── profile.d # user bash startup config ending with .sh extension │ │ └── workflows # read-only mount to keep git versioned GLASS workflows │ └── scratch │ ├── logs # logs while starting workflows are stored here │ └── refdata # all of referenced data from FTP portal │ └── bundle # GATK bundle from FTP portal goes here └── disk2 # disk for protected data └── glassdata # space for both input and output files ├── final_bams # final level 1 bam files or input for downstream ├── flowr # core directory where workflows will save data ├── inputs # space to keep input fastq or legacy bam files │ ├── bams # keep legacy bam files and mapping table per sample here │ │ └── sampleX │ └── fqs # keep legacy fastq files and mapping table per sample here │ └── sampleX └── tmp # space for saving tmp files when workflows are running  Rationale for host user mapping:  By default, docker container will always run as a non-root glassuser. When you enable host user mapping (recommended), docker container will create on-the-fly new user without any root privilege and map its UID and GID to that of current user running docker run or as defined via -e HOSTUSER= argument. With valid user mapping to a non-root, regular user on the host system, docker container will be able to read-write files only at mounted host data volumes under disk1/glasscore, disk1/scratch and disk2/glassdata. This is true as long as host user has permissions to write and recurse in directories at these locations. Such host user mapping restricts privilege escalation while running docker container which can otherwise adversely impact host file system. Read more at https://docs.docker.com/engine/security/security/ and https://security.stackexchange.com/a/153016  How to bind mounts  Copy contents from ftp://ftp.jax.org/verhaak/glass_mounts and specify path as GLASSMOUNTS variable\n# on host system, export variable where diskmounts are present, typically under /mnt export GLASSMOUNTS=\u0026quot;/mnt/glass_mounts\u0026quot;   Singularity singularity run --app goglass \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata \\ glasstools_keystone_beta.simg -m dna -t align -i fqs -s sample_barcode -f sample_mapping_table.tsv -d WES -n GO   Visit HowTo - DNA Alignments for more on running Singularity based fastq alignments  Docker We are working on `goglass` wrapper for docker. Until then, please use singularity version.   Replace mygroupname and 00000 with relevant group name and ID, respectively.\ndocker run -e HOSTUSER=$USER -e HOSTGROUP=mygroupname \\ -e HOSTUSERID=$UID -e HOSTGROUPID=00000 \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata \\ glasstools/keystone:latest goglass -m dna -t align -i fqs -s sample_barcode -f sample_mapping_table.tsv -d WES -n GO  "
},
{
	"uri": "/deprecated/howto/workflows/",
	"title": "Workflows",
	"tags": [],
	"description": "",
	"content": " Whole genome and exome alignments Variant callig RNAseq analyses "
},
{
	"uri": "/deprecated/howto/workflows/dna_alignment/",
	"title": "DNA Alignment",
	"tags": [],
	"description": "",
	"content": " Allows whole genome and exome alignment from fastq files.\n Singularity  Bind glass_mounts\n Copy contents from ftp://ftp.jax.org/verhaak/glass_mounts and specify path as GLASSMOUNTS variable\n# on host system, export variable where diskmounts are present, typically under /mnt export GLASSMOUNTS=\u0026quot;/mnt/glass_mounts\u0026quot;   Run workflow\nsingularity run --app goglass \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch \\ -B \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata \\ glasstools_keystone_beta.simg -m dna -t align -i fqs -s sample_barcode -f sample_mapping_table.tsv -d WES -n GO    If command fails because it can not find glasstools_keystone_beta.simg, check if environment variable, SINGULARITY_CACHEDIR exists and it contains image named, glasstools_keystone_beta.simg. Alternately, add full path to image while running workflow, i.e., \u0026quot;${SINGULARITY_CACHEDIR}\u0026quot;/glasstools_keystone_beta.simg\n  This will source commands or workflow from disk1/glasscore/configs/bin/goglass script with following instructions:  For now, fastq based WGS and WES alignments can be run using Singularity based workflow. We are working on shell wrappers for other workflows with priority for variant callers.  -m or mode: DNA (Others: RNA) -t or type: align (Others: mutect, mutect2, varscan2 for DNA; align, star, prada for RNA) -i or input: fqs for paired-end fastq (Others: bam for paired-end legacy bam files or level 1 aligned bam files from GLASS workflows for variant calling or RNAseq analyses) -s or unique sample barcode, preferably containing immutable uuid -f or mapping table: required for DNA alignments to get details on read groups for multi-lane sequenced samples -d or data type: WGS or WES for alignments -n or run type: DRY (test run) or GO (actual run)   To switch to whole genome derived fastq files, do:\n... -m DNA -t align -i fqs -s sample_barcode -f sample_barcode_mapping_table.tsv -d WGS -n GO  For dry run, e.g.,:\n... -m DNA -t align -i fqs -s sample_barcode -f mapping_table.tsv -d WGS -n DRY  In all cases, place raw fastq files and related mapping file under \u0026lt;path to disk2\u0026gt;/glassdata/inputs/fqs/\u0026lt;sample_barcode\u0026gt;/ directory\n Default mapping table filename is _mapping_table.tsv\n Mapping table given at -a flag has specific tsv format as per https://software.broadinstitute.org/gatk/documentation/article.php?id=6472\n Strict checking for RGID tags, especially ID, PU, SM, PL and LB flags ID and PU must be unique while SM is identical across all lanes for a same sample PL should be ILLUMINA (all CAPS) or one of SOLID, LS454, HELICOS and PACBIO. LB should be identical across all lanes for a sample except different libraries were used\n NB: PU takes precedence over ID for BQSR step\n ID format should be: flowbarcode_lane (or at least unique across all lanes)\n PU format should be: flowbarcode_lane_sampleid (or at least unique across all lanes). If merging different samples at the later date, make sure to suffix sample_id in PU flag\n NB: LB is used during markduplicate step\n   Docker We are working on `goglass` wrapper for docker. Until then, please use singularity version.   Replace mygroupname and 00000 with relevant group name and ID, respectively.\ndocker run -e HOSTUSER=$USER -e HOSTGROUP=mygroupname \\ -e HOSTUSERID=$UID -e HOSTGROUPID=00000 \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/glasscore:/mnt/glasscore \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk1/scratch:/mnt/scratch \\ -v \u0026quot;${GLASSMOUNTS}\u0026quot;/disk2/glassdata:/mnt/glassdata \\ glasstools/keystone:latest goglass -m dna -t align -i fqs -s sample_barcode -f sample_mapping_table.tsv -d WES -n GO  "
},
{
	"uri": "/deprecated/howto/tidydata/",
	"title": "TidyData",
	"tags": [],
	"description": "",
	"content": " Backup level 1 realigned bam files Backup level 2 or 3 output files for downstream analyses  Documentation is work in progress "
},
{
	"uri": "/deprecated/howto/workflows/variant_calling/",
	"title": "Variant Caller",
	"tags": [],
	"description": "",
	"content": " Allows variant calling using\u0026hellip;\n  MuTect v1 MuTect v2 1 VarScan2 1  Setup  Download and extract GLASS tools tarball and docker image on a docker on a compatible compute node with at least 200 GB disk space, 64GB RAM and 24 VCPUs\n Setup docker image and disk mounts\n  To-do on client side\n Keep tumor and normal bam files under /path_to_disk2/glassdata/inputs/final_bams/ directory If you have used GLASS alignment workflow to generate bam files, those will already be in /path_to_disk2/glassdata/inputs/final_bams/  Dry Run  Helper script: disk1/glasscore/configs/bin/glass_variant_caller which has similar argument structure as for DNA alignment workflow with following new or updated arguments:\n -a: filename and not full path of reference bam file -b: filename and not full path of tumor bam file -m: Run mode can be either MUTECTV1, VARSCAN2 or MUTECTV2\n# cd to code repository cd /path_to_disk1/glasscore/configs/bin/ ./glass_variant_caller -m \u0026lt;run mode or variant_caller_type\u0026gt; -a sampleX_nr.bam -b sampleX_tm.bam -s varcalls_caller_sampleX -t DRY | tee -a run.log    Actual Run:  change -t DRY to -t GO\n  Provides snvs, indels and germline calls [return]  "
},
{
	"uri": "/deprecated/howto/workflows/rnaseq/",
	"title": "RNAseq Analyses",
	"tags": [],
	"description": "",
	"content": " Allows processing of RNAseq data using\u0026hellip;\n  STAR-htseq PRADA  Setup  Download and extract GLASS tools tarball and docker image on a docker on a compatible compute node with at least 200 GB disk space, 64GB RAM and 24 VCPUs\n Setup docker image and disk mounts\n  To-do on client side\n Organize sample wise RNAseq fastq files under /mnt/disk2/glassdata/inputs/fqs/sampleX/  Dry Run  Helper script: disk1/glasscore/configs/bin/glass_rnaseq which has similar argument structure as for DNA alignment workflow with following new or updated arguments:\n -a: filename(s) and not full path of read 1 of sample fastq file -b: filename(s) and not full path of read 2 of sample fastq file -m: Run mode can be either STAR or PRADA\n# cd to code repository cd /path_to_disk1/glasscore/configs/bin/ ## Run STAR-htseq workflow ./glass_rnaseq -m STAR -a sampleX_read1.fq -b sampleX_read2.fq -s rnaseq_star_sampleX -t DRY | tee -a run.log ## Run PRADA workflow ./glass_rnaseq -m PRADA -a sampleX_read1.fq -b sampleX_read2.fq -s rnaseq_star_sampleX -t DRY | tee -a run.log    Actual Run:  change -t DRY to -t GO\n"
},
{
	"uri": "/deprecated/howto/",
	"title": " How To",
	"tags": [],
	"description": "",
	"content": " Workflows  \n TidyData   Backup level 1 realigned bam files Backup level 2 or 3 output files for downstream analyses \n "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/credits/",
	"title": "Credits",
	"tags": [],
	"description": "data infrastructure committee",
	"content": " *Data Infrastructure and Processing Committee* of GLASS consortium maintains standardized data processing and sharing. For more details, view our  [preprint](https://www.biorxiv.org/content/early/2017/10/02/196139), and updated credit page at https://synapse.org/glass (Requires prior approval for access)  Chair Roel Verhaak, Jackson Laboratory for Genomic Medicine, Farmington, CT, USA\n[\n\n](https://twitter.com/roelverhaak) [\n\n](https://www.jax.org/research-and-faculty/faculty/roel-verhaak)\nMembers  Rameen Beroukhim, Dana-Farber Cancer Institute, Boston, MA Christoph Bock, Center for Molecular Medicine, Vienna, Austria Joe Costello, UCSF, San Francisco, CA, USA Pim French, Erasmus University Medical Center, Rotterdam, the Netherlands Antonio Iavarone, Columbia University Medical Center, New York, NY, USA In-Hee Lee, Samsung Medical Center, Seoul, South Korea Hoon Kim, Jackson Laboratory for Genomic Medicine, Farmington, CT, USA Samir Amin, Jackson Laboratory for Genomic Medicine, Farmington, CT, USA Bernard Radlwimmer, German Cancer Research Center (DKFZ),Heidelberg, Germany Houtan Noushmehr, Henry Ford Health System, Detroit, MI, USA Lucy Stead, Leeds University, Leeds, UK  Workflow Development \u0026amp; Maintenance  Samir Amin [  \n](https://github.com/sbamin) [\n\n](https://twitter.com/sbamin) [\n\n](https://sbamin.com/contact) * Hoon Kim [\n\n](https://github.com/wisekh6) [\n\n](https://www.jax.org/research-and-faculty/faculty/research-scientists/hoon-kim)\nflowR workflow engine  Sahil Seth [  \n](https://github.com/sahilseth) [\n\n](https://twitter.com/sethsa) [\n\n](https://www.biorxiv.org/content/early/2015/10/22/029710 \u0026ldquo;preprint\u0026rdquo;)\nIT Infrastructure at JAX-GM  Eduardo Zaborowski [  \n](https://twitter.com/eduzabo) * Shane Sanders [\n\n](https://github.com/williamssanders) * David McKenzie [\n\n](https://github.com/krisp)\nStatic builds, CI, Versioning  Dev code and CI at Gitlab, contact Roel and Samir for access Production code at Github Docker image at docker://glasstools Singularity image at shub://glass-consortium/glasstools Singularity image was built upon schema provided at https://github.com/jekriske/r-base [  \n](https://github.com/jekriske)\nSuggestions  Ming Tang [  \n](https://github.com/crazyhottommy) [\n\n](https://twitter.com/tangming2005) * Floris Barthel [\n\n](https://twitter.com/florisbarthel) * Kevin C. Johnson [\n\n](https://twitter.com/Kevin_C_Johnson)\n"
},
{
	"uri": "/deprecated/",
	"title": "Deprecateds",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/_header/",
	"title": "header",
	"tags": [],
	"description": "sidebar header",
	"content": " docker.glass-consortium.org\nNote: Docker/Singulariy based workflows are now deprecated. Visit Data Resource page to get details on updated Snakemake base workflows.\n"
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]